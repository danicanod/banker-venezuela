name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # 🔍 Code Quality & Security
  quality:
    name: 🔍 Quality & Security
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 📚 Install Dependencies
      run: npm ci
      
    - name: 🔒 Security Audit
      run: npm audit --audit-level=moderate
      
    - name: 🧹 Lint Check
      run: npx tsc --noEmit
      continue-on-error: true
      
    - name: 📊 Build Check
      run: npm run build

  # 🧪 Cross-Platform Build
  build:
    name: 🧪 Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    needs: quality
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: ['18', '20']
        
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: 📚 Install Dependencies
      run: npm ci
      
    - name: 🏗️ Build Project
      run: npm run build
      
    - name: 📋 Validate Package
      run: npm pack --dry-run

  # 📊 Dependency Analysis
  dependencies:
    name: 📊 Dependency Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 📚 Install Dependencies
      run: npm ci
      
    - name: 🔍 Dependency Tree
      run: npm ls --depth=0
      
    - name: 📈 Bundle Size Analysis
      run: |
        npm run build
        du -sh dist/
        find dist/ -name "*.js" -exec wc -l {} +
        
    - name: 🏷️ Check Outdated Packages
      run: npm outdated || true

  # 🎯 Performance Check
  performance:
    name: 🎯 Performance Check
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 📚 Install Dependencies
      run: npm ci
      
    - name: 🏗️ Build Project
      run: npm run build
      
    - name: ⚡ Performance Metrics
      run: |
        echo "🔍 TypeScript Compilation Performance:"
        time npm run build
        
        echo "📊 Build Output Size:"
        du -sh dist/
        
        echo "📈 File Count:"
        find dist/ -type f | wc -l

  # 🏦 Banking Compatibility Check
  banking-check:
    name: 🏦 Banking Compatibility
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 📚 Install Dependencies
      run: npm ci
      
    - name: 🎭 Install Playwright
      run: npx playwright install chromium
      
    - name: 🏗️ Build Project
      run: npm run build
      
    - name: 🔍 Browser Status Check
      run: npm run browser:status || echo "Browser check completed"
      
    - name: 🧹 Cleanup Check
      run: npm run clean

  # 📋 Documentation Check
  docs:
    name: 📋 Documentation
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 📚 Check README
      run: |
        if [ ! -f README.md ]; then
          echo "❌ README.md is missing"
          exit 1
        fi
        echo "✅ README.md exists"
        
    - name: 📝 Check Contributing Guide
      run: |
        if [ ! -f CONTRIBUTING.md ]; then
          echo "❌ CONTRIBUTING.md is missing"
          exit 1
        fi
        echo "✅ CONTRIBUTING.md exists"
        
    - name: 🔒 Check Security Policy
      run: |
        if [ ! -f SECURITY.md ]; then
          echo "❌ SECURITY.md is missing"
          exit 1
        fi
        echo "✅ SECURITY.md exists"
        
    - name: 📄 Check License
      run: |
        if [ ! -f LICENSE ]; then
          echo "❌ LICENSE is missing"
          exit 1
        fi
        echo "✅ LICENSE exists"

  # 🎉 Success Notification
  success:
    name: 🎉 Pipeline Success
    runs-on: ubuntu-latest
    needs: [quality, build, dependencies, docs]
    if: success()
    
    steps:
    - name: ✅ Success Message
      run: |
        echo "🎉 All checks passed successfully!"
        echo "✅ Quality checks: PASSED"
        echo "✅ Cross-platform builds: PASSED" 
        echo "✅ Dependencies analysis: PASSED"
        echo "✅ Documentation: PASSED"
        echo ""
        echo "🚀 Ready for deployment!" 